% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CellTypist.R
\name{TrainCellTypist}
\alias{TrainCellTypist}
\title{Train Celltypist}
\usage{
TrainCellTypist(
  seuratObj,
  labelField,
  modelFile,
  minCellsPerClass = 20,
  assayName = Seurat::DefaultAssay(seuratObj),
  tempFileLocation = NULL,
  dropAmbiguousLabelValues = TRUE,
  excludedClasses = NULL,
  featureInclusionList = NULL,
  featureExclusionList = NULL
)
}
\arguments{
\item{seuratObj}{The seurat object}

\item{labelField}{The field in seuratObj@meta.data holding the labels for training}

\item{modelFile}{The path to save the model}

\item{minCellsPerClass}{If provided, any classes (and corresponding cells) with fewer than this many cells will be dropped from the training data}

\item{assayName}{The name of the assay to use}

\item{tempFileLocation}{The location where temporary files (like the annData version of the seurat object), will be written.}

\item{dropAmbiguousLabelValues}{If true, and label value with a comma will be dropped.}

\item{excludedClasses}{A vector of labels to discard.}

\item{featureInclusionList}{If provided, the input count matrix will be subset to just these features. If used, Seurat::NormalizeData will be re-run.}

\item{featureExclusionList}{If provided, the input count matrix will be subset to remove these features. If used, Seurat::NormalizeData will be re-run.}
}
\description{
Train celltypist using the data in a seurat object and saves the resulting model
}
