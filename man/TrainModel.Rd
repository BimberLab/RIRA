% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Pipeline_Seurat.R
\name{TrainModel}
\alias{TrainModel}
\title{Creates a binary classifier to classify cells within a Seurat object}
\usage{
TrainModel(
  training_matrix,
  celltype,
  hyperparameter_tuning = F,
  learner = "classif.ranger",
  inner_resampling = "cv",
  outer_resampling = "cv",
  inner_folds = 4,
  inner_ratio = 0.8,
  outer_folds = 3,
  outer_ratio = 0.8,
  n_models = 20,
  n_cores = NULL
)
}
\arguments{
\item{training_matrix}{A counts or data slot provided by TrainAllModels}

\item{celltype}{The celltype (provided by TrainAllModels) used as classifier's positive prediction}

\item{hyperparameter_tuning}{logical that determines whether or not hyperparameter tuning should be performed.}

\item{learner}{The mlr3 learner that should be used. Currently fixed to "classif.ranger" if hyperparameter tuning is FALSE. Otherwise, "classif.xgboost" and "classif.ranger" are supported.}

\item{inner_resampling}{The resampling strategy that is used for hyperparameter optimization. Holdout ("hout" or "holdout") and cross validation ("cv" or "cross-validation") are supported.}

\item{outer_resampling}{The resampling strategy that is used to determine overfitting. Holdout ("hout" or "holdout") and cross validation ("cv" or "cross-validation") are supported.}

\item{inner_folds}{The number of folds to be used for inner_resampling if cross-valdiation is performed.}

\item{inner_ratio}{The ratio of training to testing data to be used for inner_resampling if holdout resampling is performed.}

\item{outer_folds}{The number of folds to be used for outer_resampling if cross-valdiation is performed.}

\item{outer_ratio}{The ratio of training to testing data to be used for inner_resampling if holdout resampling is performed.}

\item{n_models}{The number of models to be trained during hyperparameter tuning. The model with the highest accuracy will be selected and returned.}

\item{n_cores}{If non-null, this number of workers will be used with future::plan}
}
\description{
Creates a binary classifier to classify cells via TrainAllModels to iterate over all cell types.
}
